name: Deploy

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: gms-image
  CONTAINER_NAME: gms-container

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag image

      - name: Log into registry
        run: echo "${{ secrets.AUTH_GITHUB }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_TAG=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          docker tag image $IMAGE_TAG:latest
          docker push $IMAGE_TAG:latest

  deploy-docker-image:
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest

    steps:
      - uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "${{ secrets.AUTH_GITHUB }}" | docker login docker.pkg.github.com -u vasbaza --password-stdin
            IMAGE=docker.pkg.github.com/${{ github.repository }}/${{ env.IMAGE_NAME }}
            docker pull $IMAGE
            if docker ps -a | grep -q ${{ env.CONTAINER_NAME }}
            then
              if docker ps | grep -q ${{ env.CONTAINER_NAME }}
              then
                docker stop ${{ env.CONTAINER_NAME }}
              fi
              docker rm ${{ env.CONTAINER_NAME }}
            fi
            docker run -d -p 80:80 --name ${{ env.CONTAINER_NAME }} $IMAGE
            docker system prune -a -f